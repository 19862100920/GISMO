<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html>  <head>    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">    <meta name="description" content="Information about using datasources to intellegently retrieve waveform data into matlab via the waveform suite." />    <meta name="keywords" content="waveform suite, MATLAB, Antelope, WINSTON, SAC, Seisan, guide, seismology, tutorial, datasource class" />    <title>Working with the Datasource Class</title>        <link type="text/css" rel="stylesheet" href="wavemanuals.css">      </head>      <body>  <a name="top"/>  <div id="top_navigation" class="navButtons">	<p><a href="../../index.html">home</a> |	<a href="waveform.htm">waveform</a> | 	<a href="scnlobject.htm">scnlobject</a> | 	<span class="activePage">datasource</span> | 	<a href="filterobject.htm">filterobject </a>| 	<a href="spectralobject.htm">spectralobject</a> | 	<a href="../feline_example/tutorial_and_code_frameset.htm">object tutorial</a>    <br/> <a href="wave_example1.htm">Examples of my waveform suite in use</a></p>  </div>    <hr>        <h1>DATASOURCE</h1><div id="summary_pane">    <p>Datasource objects are the gateway between objects (such as waveform) and their databases or stored files.	</p>	</div>    <h2>Table of Contents</h2>        <ol>            <li><a href="#creating_waveforms">Creating a datasource object</a> - blah blah</li>            <li><a href="#waveform_contents">What's in a datasource object</a> - physical data 	  structure of datasource and using the get command to get at your info </li>            <li><a href="#changing_waveform">Making direct changes to the datasource </a> - using 	  the get command to change your datsource </li>            <li><a href="#other_functions">Available Datasources</a> - Detailed information about importing data from a variety of data streams</li>      <ul>        <li><a href="#create_antelope">Antelope database</a></li>        <li><a href="#create_winston">Winston wave server</a></li>        <li><a href="#create_sac">SAC files</a></li>        <li><a href="#create_file">.mat files</a></li>        <li><a href="#create_seisan">SEISAN files</a></li>      </ul>      <li><a href="#custom_datasources">Customizing and creating new input types</a></li>          </ol>        <p><a href="wave_example1.htm">Examples of my waveform suite in use</a></p>        <h2><a name="creating_waveforms"></a>Creating a datasource </h2>        <p><span class="style1"><br>                <strong><code>ds = datasource(type, filename or server, [parameter1][, parameter2][...])</code></strong><br>            </span>creates a datasource of type "type"  from consituent parts. Additional parameters depend upon the datasource type.</p>        <ol>            <li><span class="style1"> <span class="style2"><code> ds = datasource('antelope',databasepath) <br>                      </code></span></span><code>associates this datasource with a specific database.  With additional parameters, the      datasource may be able to traverse a directory tree to determine the correct database.</code></li>            <li><span class="style1"><span class="style2"><code>ds = datasource('winston',server, port)</code></span></span><span class="style1"><span class="style2"><code></code></span></span> <span class="style1"><span class="style2"><code><br>                    </code></span></span><code> associates the datasource with a winston wave server </code></li>            <li><code>          <span class="style2">            ds = datasource('sac',filelocation)<br>          </span>associates the datasource with a SAC file.  With additional parameters, the          datasource may be able to traverse a directory tree to determine the correct file.        </code>      </li><li><code>          <span class="style2">            ds = datasource('file',filelocation)<br>          </span>associates the datasource with a SAC file.  With additional parameters, the          datasource may be able to traverse a directory tree to determine the correct file.        </code>      </li><li><code>          <span class="style2">            ds = datasource('seisan',filelocation)<br>          </span>associates the datasource with a SEISAN file.  With additional parameters, the          datasource may be able to traverse a directory tree to determine the correct seisan file.        </code>      </li>          </ol>        <h2>  <a name="waveform_contents"></a>What's in a datasource?</h2>        <p>A datasource contains only the following information: </p>        <ul>            <li>datasource type</li>            <li>.</li>            <li>.</li>          </ul>        <p>You can use the <code>struct(datasource)</code> command to return the absolutely raw data and see for yourself... <em>struct</em> returns a structure based on the listed object. </p>        <p>However, much more information can be asked of it via the <strong>datasource/get</strong> routine. </p>        <ul>            <li><code>get(ds,'type')</code> - .. <br>      </li>          </ul>        <h2><a name="changing_waveform"></a>Making direct changes to your datasource</h2>        <p>Using set, you can change the values of your datasource data. The general form of set is:</p>        <p>modifiedDatasource = set(originalDatasource, 'PropertyToChange', newValue)</p>        <ul>            <li><code>set(ds,'type',value)</code> - ...</li>    </ul>        <h2><a name="other_functions"></a>How to set up specific data sources </h2>        <h3><a name="create_antelope">Antelope database</a></h3>    <p><a href="http://www.brtt.com/">BRTT's</a> Antelope Toolbox for MATLAB must be installed in order to access      an antelope database.    </p>    <p>Here's a constructor that sets up a datasource for use with our archival data:</p>    <code>ds_antelope = datasource('antelope',...<br/>      '/iwrun/op/db/archive/archive_%04d/archive_%04d_%02d_%02d',...<br/>    'year','year','month','day');</code>    <p>Which returns...</p>    <pre>ds =            type: ANTELOPE      location: /iwrun/op/db/archive/archive_[YEAR]/archive_[YEAR]_[MONTH]_[DAY]    </pre>    <h3><a name="create_winston">Winston wave server</a></h3>    <p>To use the waveform files with winston, you need to have access to the java archive used to access a Winston database.    usgs.jar, available with the progam "SWARM" contains the appropriate files. </p>    <p>The syntax for creating a winston datasource object is:</p>    <code>ds = datasource('winston',server, port);</code>    <p>Where, SERVER is the internet address of the Winston wave server, and PORT is the port used to access the data.</p>    <br />    WINSTON WARNING: Currently, data received through winston is not    adjusted<br />    for instrument gain, therefore, it is in COUNTS. To fix this,    you'll<br />    need to multiply it by the correct gain. Ex. W = W .* 6.67;    This<br />    merely scales the data...<br />    <h3><a name="create_sac"/>SAC files</h3>    <h3><a name="create_file"/>.mat files</h3>    <h3><a name="create_seisan"/>SEISAN files</h3>        <hr>        <p><a href="wave_example1.htm">Examples of the waveform suite in use</a></p>    <a href="#top">top of page</a>  </body>  </html>