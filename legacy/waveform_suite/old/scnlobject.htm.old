<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd"><html><head><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><meta name="description" content="An introduction to the scnlobject (station-channel-network-location) for MATLAB." /><meta name="keywords" content="waveform suite, MATLAB, guide, seismology, tutorial, scnlobject class" /><title>Working with the Scnlobject Class</title><link type="text/css" rel="stylesheet" href="wavemanuals.css"></head><body>  <a name="top"/>  <div id="top_navigation" class="navButtons">	<p><a href="../../index.html">home</a> |	<a href="waveform.htm">waveform</a> | 	<span class="activePage">scnlobject</span> | 	<a href="datasource.htm">datasource</a> | 	<a href="filterobject.htm">filterobject </a>| 	<a href="spectralobject.htm">spectralobject</a> | 	<a href="../feline_example/tutorial_and_code_frameset.htm">object tutorial</a>    <br/> <a href="wave_example1.htm">Examples of my waveform suite in use</a></p>  </div><hr><h1>SCNLOBJECT</h1><p>scnlobjects help organize station identification characteristics.</p><h3>Table of Contents</h3><ol>  <li><a href="#creating_scnlobjects">Creating a scnlobject </a> - Constructing scnlobjects.</li>  <li><a href="#scnlobject_contents">What's in a scnlobject?</a> - physical data structure of scnlobjects and using the get command to get at your info </li>  <li><a href="#changingscnlobjects">Making direct changes to the scnlobject </a> - using the get command to change your scnlobject </li></ol><p><a href="wave_example1.htm">Examples of my waveform suite in use</a></p><h2><a name="creating_scnlobjects"></a>Creating a scnlobject </h2><p><span class="style1"><br>      <strong><code>scnl = scnlobject(station, channel [, network[, location]])</code></strong><br></span>Create a scnlobject </p><ol>  <li><span class="style1"> <span class="style2"><code> scnl = scnlobject('OKCF','EHZ','AV','1') </code><br>  </span></span>creates a single scnl for this station/channel combo.  In this case, a network <i>AV</i> and a location <i>'1'</i>   have been assigned as well.  The network and location parameters are optional, though.</li>  <li><span class="style1"><span class="style2"><code>scnl = scnlobject({'RED','REF'},'EHZ')<br>  </code></span></span>create multiple scnlobjects (1x2), one for each station, and assign the   same channel to all.  A single channel can be assigned to any number of stations.</li>  <li><span class="style1"><span class="style2"><code>scnl = scnlobject('OKCE',{'BHZ','BHE','BHN'})</code><br />  </span></span>Create an 1x3 scnlobject for station OKCE, with each channel represented.<br/>Any number of  channels can be assigned to a single station.</li>    <li><span class="style1"><span class="style2"><code>scnl = scnlobject({'OKCE','OKER','OKSO'},{'BHZ','EHZ','BHZ'})</code><br />  </span></span>Create an 1x3 scnlobject, assigning the station-channel pair to each one.<br>In this example the pairs become: OKCE:BHZ, OKER:EHZ, OKSO:BHZ.<br/>This works for any number of station-channel pairs</li></ol><p><span class="style4">  <code>s = scnlobject() </code></span> <br>  create a default scnlobject. The station and channel will be blank, while the network and location will contain '--'. <span class="style1"></span></p><h2>  <a name="scnlobject_contents"></a>What's in a scnlobject?</h2><p>A scnlobject contains only the following information: </p><ul>  <li>station</li>  <li>channel</li>  <li>network</li>  <li>location</li></ul><p>You can use the <code>struct(scnlobject)</code> command to return the absolutely raw data and see for yourself... <em>struct</em> returns a structure based on the listed object. </p><p>However, much more information can be asked of it via the <strong>scnlobject/get</strong> routine. </p><ul>  <li><code>get(scnl,'station')</code> - returns the station(s)</li>  <li><code>get(scnl,'channel')</code> - returns the channel(s)</li>  <li><code>get(scnl,'network')</code> - returns the network(s)</li>  <li><code>get(scnl,'location')</code> - returns location(s)<br>  </li></ul><h2><a name="changing_scnlobjects"></a>Making direct changes to your scnlobject</h2><p>Using set, you can change the values of your scnlobject data. The general form of set is:</p><p>modifiedSCNL = set(originalSCNL, 'PropertyToChange', newValue)</p><ul>  <li><code>set(scnl,'station',value)</code> - </li>  <li><code>set(scnl,'channel',value)</code> -  </li>  <li><code>set(scnl,'network', value)</code> - </li>  <li><code>set(scnl,'location',value)</code> - </li></ul><hr><p><a href="wave_example1.htm">Examples of the waveform suite in use</a></p><div id="bottom_navigation" class="navButtons"><p ><a href="../../index.html">home</a> | <a href="waveform.htm">waveform  </a> | <a href="spectralobject.htm">spectral </a> | <a href="filterobject.htm">filterobject </a>| <a href="datasource.htm">datasource </a> | <span class="activePage"><a href="scnlobject.htm">scnlobject </a></span> | <a href="http://www.avo.alaska.edu/input/celso/matlabweb/feline_example/tutorial_and_code_frameset.htm">object tutorial</a></p></div></body></html>